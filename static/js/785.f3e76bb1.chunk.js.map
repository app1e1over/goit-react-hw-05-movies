{"version":3,"file":"static/js/785.f3e76bb1.chunk.js","mappings":"iLAMMA,GAASC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAwBpB,UAvBA,YAA6B,IAAXC,EAAU,EAAVA,QACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAiBC,EAAAA,EAAAA,QAAO,MAkBhC,OAhB8B,OAAzBD,EAAeE,UACdC,EAAAA,EAAAA,IAAcP,EAAS,WAAWQ,MAAK,SAAAC,GAU7C,IAAqBC,IATCD,EAAEE,QAUtBR,EAAUO,EAAQE,KAAI,SAAAC,GAAC,OAAI,SAACf,EAAD,CAAmBgB,OAAQD,GAAdA,EAAEE,GAAnB,IATlB,KAGLC,EAAAA,EAAAA,YAAU,WACNZ,EAAeE,QAAUJ,CAC5B,GAAE,CAACA,KAQC,SAAC,EAAAe,SAAD,CAAUC,SAAU,UAApB,SAAgChB,EAAOiB,OAAO,EAAIjB,EAAS,wBACnE,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import React from 'react';\nimport { useState, useRef,useEffect } from 'react';\nimport { getAdditional } from 'javascript/MovieFetcher';\nimport { Suspense } from 'react';\nimport { lazy } from 'react';\n\nconst Review = lazy(() => import('components/Review/Review'))\nfunction Reviews({movieId}) {\n    const [values, setValues]=useState([]);\n    const previousValues = useRef(null);\n\n    if(previousValues.current===null){\n        getAdditional(movieId, \"reviews\").then(v => {\n            drawReviews(v.results);\n        });\n    }\n \n    useEffect(() => {\n        previousValues.current = values;\n    }, [values]);\n\n\n  function drawReviews(reviews) {\n    setValues(reviews.map(a => <Review key={a.id} review={a}></Review>));\n  }\n\n\n  return <Suspense fallback={\"Loading\"}>{values.length>0 ? values : \"no reviews were left\"}</Suspense>;\n}\n\nexport default Reviews;\n"],"names":["Review","lazy","movieId","useState","values","setValues","previousValues","useRef","current","getAdditional","then","v","reviews","results","map","a","review","id","useEffect","Suspense","fallback","length"],"sourceRoot":""}