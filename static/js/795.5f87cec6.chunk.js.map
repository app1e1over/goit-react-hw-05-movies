{"version":3,"file":"static/js/795.5f87cec6.chunk.js","mappings":"iLAIMA,GAAQC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAkCnB,UAjCA,YAA8B,IAAZC,EAAW,EAAXA,QAChB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAiBC,EAAAA,EAAAA,QAAO,MA4B9B,OA1B6B,OAAzBD,EAAeE,UACjBC,EAAAA,EAAAA,IAAcP,EAAS,QAAQQ,MAAK,SAAAC,GAQtC,IAAoBC,IAPLD,EAAEE,KAQfC,QAAQC,IAAIH,GACZP,EACEO,EAAOI,KAAI,SAAAC,GAAC,OACV,SAACjB,EAAD,CAEEkB,KAAMD,EAAEC,KACRC,aAAcF,EAAEE,aAChBC,UAAWH,EAAEG,WAHRH,EAAEI,GAFC,IATb,KAGHC,EAAAA,EAAAA,YAAU,WACRhB,EAAeE,QAAUJ,CAC1B,GAAE,CAACA,KAeJkB,EAAAA,EAAAA,YAAU,WACRhB,EAAeE,QAAUJ,CAC1B,GAAE,CAACA,KACG,yBAAMA,GACd,C","sources":["components/Actors/Actors.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { getAdditional } from 'javascript/MovieFetcher';\nimport { lazy } from 'react';\n\nconst Actor = lazy(() => import('components/Actor/Actor'))\nfunction Actors({ movieId }) {\n  const [values, setValues] = useState([]);\n  const previousValues = useRef(null);\n\n  if (previousValues.current===null) {\n    getAdditional(movieId, 'cast').then(v => {\n      drawActors(v.cast);\n    });\n  }\n\n  useEffect(() => {\n    previousValues.current = values;\n  }, [values]);\n  function drawActors(actors) {\n    console.log(actors);\n    setValues(\n      actors.map(a => (\n        <Actor\n          key={a.id}\n          name={a.name}\n          profile_path={a.profile_path}\n          character={a.character}\n        ></Actor>\n      ))\n    );\n  }\n\n  useEffect(() => {\n    previousValues.current = values;\n  }, [values]);\n  return <div>{values}</div>;\n}\n\nexport default Actors;\n"],"names":["Actor","lazy","movieId","useState","values","setValues","previousValues","useRef","current","getAdditional","then","v","actors","cast","console","log","map","a","name","profile_path","character","id","useEffect"],"sourceRoot":""}